1) 
int findsum(a[][], n)
	int sum = 0;
	for (int i=1; i<n; i++)
		for (int j=1; j<n; j++)
			sum = sum + a[i][j];
	return sum;
T(n) 	= i=1En(2 + (nEj=1 4 - 2))+ 1
	= i=1En(2 + 4n - 2)+ 1
	= i=1En(4n)+ 1
	= i=1En(4n)+ 1
T(n)	= 4n^2 + 1 

2)
	int sum = 0;
	for (int i=1; i<n; i++)
		for (j=n; j>=i; j--)
			sum = sum+j;
	return sum;

T(n)	= i=1En(2 +(i=1En-i(4) +6) +1
	= i=1En(2 +4n -4i +6) +1
	= i=1En(4n -4i +8) +1
	= i=1En(4n -4i +8) +1
	= 8n +4n^2 -i=1En4i +1
	= 8n +4n^2 -4(i=1Eni) +1
	= 8n +4n^2 -4(n^2/2) +1
	= 8n +4n^2 -2n^2 +1
	= 2n^2 +8n +1

i=1Eni = (n(n+1))/2 = n^2/2

3)
	int sum = 0;
	for(i=0; i<=n; i++)
		for(j=1; j<=i; j++)
			sum = sum[i][j];
	return sum;

	int sum = 0;
		1
	for(i=0; i<=n; i++)
	     1    n+2   n+1
		for(j=1; j<=i; j++)
n+1()		     1    i+1   i	
|			sum = sum[i][j];
|			  i       i
	return sum;
	  1
T(n) 	= i=1En(2 +(j=1Ei(4) +2) ) +7
	= i=1En(2 +(4i +2) ) +7
	= i=1En(4 +4i) +7
	= i=1En(4 +4(i=1Eni)) +7
	= 4n +4(n^2)/2 +7
T(n)	= 2n^2 +4n +7




Seatwork:
1)
int findsum(a[][], n)
	int sum = 0;
	for(int i=1; i<n; i++)
		for(int j=1; j<n; j++)
			for(int k=n; k>=j; k--)
				sum = sum + k;
	return sum;

